{"version":3,"file":"static/webpack/static/development/pages/index.js.93adb4e2fa12e7289429.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Head from '../components/Head';\nimport axios from 'axios';\nimport config from '../config';\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            arrDares: [],\n            currentDare: '',\n            loading: false,\n            startTime: 0,\n            currentTime: 0,\n            currentToken: ''\n        };\n    }\n    async componentDidMount() {\n        await this.setState({ loading: true, currentToken: config.access_token })\n        // const aaaaa = await this.checkToken(config.access_token)\n        if (!aaaaa) {\n            console.log('cadsandsjsjsjsj')\n        } else {\n            console.log('OKOKOKOK')\n        }\n        return\n        // const query = `https://graph.facebook.com/${config.post_id}/comments?fields=message,from&access_token=${currentToken}`\n        // this.getAllComments(query)\n    }\n    getAllComments = async (query) => {\n        const aa = await this.checkToken(config.access_token)\n        if (aa.status == 200) {\n            await this.setState({ currentToken: config.access_token2 })\n        }\n        axios.get(query)\n            .then(res => {\n                const resData = res.data\n                const { data, paging } = resData\n                const dataFiltter = data.filter(item => (!item.message.includes('Gọi điện')))\n                this.setState({ arrDares: this.state.arrDares.concat(dataFiltter) })\n                if (paging && paging.next) {\n                    this.getAllComments(paging.next)\n                } else {\n                    this.setState({ loading: false })\n                }\n            }).catch(e => {\n                throw new Error('co van de')\n            })\n\n    }\n    checkToken = access_token => {\n        const query = 'https://graph.facebook.com/me?access_token=' + access_token\n        return axios.get(query)\n    }\n    sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n\n    generateDare = async () => {\n        if (this.state.loading) return\n        this.setState({ loading: true })\n        await this.sleep(3000)\n        const random = Math.floor(Math.random() * this.state.arrDares.length)\n        this.setState({ currentDare: this.state.arrDares[random], loading: false })\n    }\n    render() {\n        const { currentDare, loading, startTime, currentTime } = this.state\n        const fromName = currentDare.from ? currentDare.from.name : ''\n        const style = {\n            container: {\n                height: '100vh',\n            },\n            tren: {\n                width: '100%',\n                height: '70%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                backgroundColor: 'blue'\n            },\n            duoi: {\n                width: '100%',\n                height: '30%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                backgroundColor: 'green',\n            }\n        }\n        return (\n            <div className=\"\">\n                <Head></Head>\n                <div style={style.container} >\n                    <h6 className=\"center-align\">Develope by @xuanhuyjs</h6>\n                    <div style={style.tren}>\n                        {!loading ? (<div>\n                            <div className=\"card blue-grey darken-1\">\n                                <div className=\"card-content white-text\">\n                                    <p>{currentDare.message || 'Welcome to #DAREHUB'}</p>\n                                </div>\n                                <div className=\"card-action right-align\">\n                                    <span>{fromName}</span>\n                                </div>\n                            </div>\n                        </div>) : null}\n\n                    </div>\n                    {loading ? (<div className=\"progress\" >\n                        <div className=\"indeterminate\"></div>\n                    </div>) : null}\n                    <div style={style.duoi} className=\"center-align\" onClick={this.generateDare} >\n                        <a className=\"waves-effect waves-light btn-large\">generate dare</a>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAGA;AAAA;AACA;AAJA;AAKA;AAEA;AADA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAxBA;AAAA;AAAA;AAAA;AACA;AADA;AA6CA;AACA;AACA;AACA;AAhDA;AAgDA;AAAA;AAAA;AAAA;AACA;AAjDA;AAAA;AAAA;AAAA;AAAA;AAmDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AAAA;AAAA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlDA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAuCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAZA;AAqiHA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}